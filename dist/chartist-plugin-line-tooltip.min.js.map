{"version":3,"file":"chartist-plugin-line-tooltip.min.js","sources":["chartist-plugin-line-tooltip.js"],"names":["root","factory","define","amd","returnExportsGlobal","exports","module","this","window","document","Chartist","defaultOptions","formatHeader","noop","formatValue","cursorLabel","undefined","classNames","tooltip","series","cursor","Tooltip","chart","chartRect","coords","options","labels","$tooltip","$","container","length","appendTo","hide","getGroupName","index","data","groupName","alphaNumerate","getClassName","className","getGroupedValues","groups","map","i","text","filter","group","reduce","result","texts","indexOf","push","tooltipHtml","header","values","html","prev","value","tooltipOffsetCache","getTooltipOffset","left","top","height","outerHeight","tooltipHtmlCache","getTooltipHtml","show","css","Cursor","svg","elem","$label","chartPadding","halfLabelWidth","width","showLabel","x","attr","style","x1","x2","y1","y2","IndexTracker","binarySearch","start","end","minDistanceIndex","middle","Math","floor","distance","abs","get","reset","set","newIndex","plugins","lineTooltip","extend","Line","indexTracker","on","event","Array","type","target","tagName","toLowerCase","offsetX","originalEvent","layerX"],"mappings":"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","sourcesContent":["(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], function () {\n      return (root.returnExportsGlobal = factory());\n    });\n  } else if (typeof exports === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like enviroments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    root['Chartist.plugins.lineTooltip'] = factory();\n  }\n}(this, function () {\n\n  /**\r\n   * Chartist.js plugin to add tooltip in a line chart.\r\n   *\r\n   */\r\n  /* global Chartist */\r\n  (function (window, document, Chartist) {\r\n    'use strict';\r\n\r\n    var defaultOptions = {\r\n      formatHeader: Chartist.noop,\r\n      formatValue: Chartist.noop,\r\n      cursorLabel: undefined,\r\n      classNames: {\r\n        tooltip: 'tooltip',\r\n        series: 'series',\r\n        cursor: 'cursor'\r\n      }\r\n    };\r\n\r\n    var Tooltip = function (chart, chartRect, coords, options, labels, series) {\r\n\r\n      var $tooltip = $('.' + options.classNames.tooltip, chart.container);\r\n\r\n      if (!$tooltip.length) {\r\n        $tooltip = $('<div class=\"' + options.classNames.tooltip + '\"></div>').appendTo(chart.container);\r\n      }\r\n\r\n      $tooltip.hide();\r\n\r\n      var getGroupName = function (index) {\r\n        return chart.data.series[index].groupName || Chartist.alphaNumerate(index);\r\n      };\r\n\r\n      var getClassName = function (index) {\r\n        return chart.data.series[index].className || (options.classNames.series + '-' + Chartist.alphaNumerate(index));\r\n      };\r\n\r\n      var getGroupedValues = function (index) {\r\n\r\n        var groups = {};\r\n\r\n        return series\r\n          .map(function (data, i) {\r\n            return {\r\n              groupName: getGroupName(i),\r\n              className: getClassName(i),\r\n              text: options.formatValue(data[index], i)\r\n            };\r\n          })\r\n          .filter(function (group) {\r\n            return group.text !== undefined && group.text !== null && group.text !== '';\r\n          })\r\n          .reduce(function (result, group) {\r\n\r\n            var texts = groups[group.groupName] || (groups[group.groupName] = []);\r\n\r\n            if (texts.indexOf(group.text) === -1) {\r\n              texts.push(group.text);\r\n              result.push(group);\r\n            }\r\n            return result;\r\n          }, []);\r\n      };\r\n\r\n      var tooltipHtml = function (index) {\r\n\r\n        var header = options.formatHeader(labels[index], index);\r\n        var values = getGroupedValues(index);\r\n\r\n        var html = '<div class=\"' + options.classNames.tooltip + '-header\">' + (header || '') + '</div>';\r\n\r\n        return values.reduce(function (prev, value) {\r\n          return prev + '<div class=\"' + options.classNames.series + ' ' + value.className + '\">' +\r\n            '<svg class=\"' + options.classNames.series + '-label\"><line x1=\"0\" x2=\"100%\" y1=\"50%\" y2=\"50%\" class=\"label-line\"></line></svg>' +\r\n            '<div class=\"value\">' + value.text + '</div></div>';\r\n        }, html);\r\n      };\r\n\r\n      var tooltipOffsetCache = {};\r\n\r\n      var getTooltipOffset = function (index) {\r\n        return tooltipOffsetCache[index] || (tooltipOffsetCache[index] = {\r\n          left: coords[index],\r\n          top: chartRect.height() / 2 - $tooltip.outerHeight() / 2\r\n        });\r\n      };\r\n\r\n      var tooltipHtmlCache = {};\r\n\r\n      var getTooltipHtml = function (index) {\r\n        return tooltipHtmlCache[index] || (tooltipHtmlCache[index] = tooltipHtml(index));\r\n      };\r\n\r\n      this.show = function (index) {\r\n\r\n        $tooltip\r\n          .html(getTooltipHtml(index))\r\n          .css(getTooltipOffset(index))\r\n          .show();\r\n      };\r\n\r\n      this.hide = function () {\r\n        $tooltip.hide();\r\n      };\r\n    };\r\n\r\n    var Cursor = function (chart, chartRect, coords, options) {\r\n\r\n      var cursor = chart.svg.elem('line', {}, options.classNames.cursor);\r\n\r\n      var $label = $('.' + options.classNames.cursor + '-label', chart.container);\r\n\r\n      if (!$label.length) {\r\n        $label = $('<span class=\"' + options.classNames.cursor + '-label\" style=\"position: absolute\"></span>')\r\n          .html(options.cursorLabel || '')\r\n          .appendTo(chart.container);\r\n      }\r\n\r\n      $label\r\n        .hide()\r\n        .css('top', chart.options.chartPadding.top - $label.outerHeight());\r\n\r\n      var halfLabelWidth = $label.width() / 2;\r\n\r\n      var showLabel = function (x) {\r\n        $label\r\n          .css('left', x - halfLabelWidth)\r\n          .show();\r\n      };\r\n\r\n      this.hide = function () {\r\n        cursor.attr({ style: 'display: none' });\r\n        $label.hide();\r\n      };\r\n\r\n      this.show = function (index) {\r\n\r\n        var x = coords[index];\r\n\r\n        showLabel(x);\r\n\r\n        cursor.attr({\r\n          x1: x,\r\n          x2: x,\r\n          y1: chartRect.y1,\r\n          y2: chartRect.y2,\r\n          style: ''\r\n        });\r\n      };\r\n    };\r\n\r\n    var IndexTracker = function (coords) {\r\n\r\n      var index = -1;\r\n\r\n      var binarySearch = function (value, start, end, minDistanceIndex) {\r\n\r\n        if (start === undefined) {\r\n          start = 0;\r\n        }\r\n        if (end === undefined) {\r\n          end = coords.length - 1;\r\n        }\r\n\r\n        if (start > end) {\r\n          return minDistanceIndex;\r\n        }\r\n\r\n        var middle = Math.floor((start + end) / 2);\r\n        var distance = Math.abs(value - coords[middle]);\r\n\r\n        if (distance === 0) {\r\n          return middle;\r\n        }\r\n\r\n        if (minDistanceIndex === undefined || distance < Math.abs(value - coords[minDistanceIndex])) {\r\n          minDistanceIndex = middle;\r\n        }\r\n\r\n        if (value < coords[middle]) {\r\n          return binarySearch(value, start, middle - 1, minDistanceIndex);\r\n        } else {\r\n          return binarySearch(value, middle + 1, end, minDistanceIndex);\r\n        }\r\n      };\r\n\r\n      this.get = function () {\r\n        return index;\r\n      };\r\n\r\n      this.reset = function () {\r\n        index = -1;\r\n      };\r\n\r\n      this.set = function (x) {\r\n\r\n        var newIndex = binarySearch(x);\r\n\r\n        if (index === newIndex) {\r\n          return false;\r\n        }\r\n\r\n        index = newIndex;\r\n\r\n        return true;\r\n      };\r\n    };\r\n\r\n    Chartist.plugins = Chartist.plugins || {};\r\n    Chartist.plugins.lineTooltip = function (options) {\r\n\r\n      options = Chartist.extend({}, defaultOptions, options);\r\n\r\n      return function (chart) {\r\n\r\n        if (!(chart instanceof Chartist.Line)) {\r\n          return;\r\n        }\r\n\r\n        var series,\r\n          labels,\r\n          coords;\r\n\r\n        var tooltip,\r\n          cursor,\r\n          indexTracker;\r\n\r\n        chart.on('data', function (event) {\r\n          labels = event.data.labels;\r\n          coords = new Array(labels.length);\r\n          series = new Array(event.data.series.length);\r\n        });\r\n\r\n        chart.on('draw', function (data) {\r\n\r\n          if (data.type === 'line') {\r\n            series[data.index] = data.values;\r\n          }\r\n\r\n          if (data.type === 'point') {\r\n            coords[data.index] = data.x;\r\n          }\r\n        });\r\n\r\n        chart.on('created', function (data) {\r\n          indexTracker = new IndexTracker(coords);\r\n          tooltip = new Tooltip(chart, data.chartRect, coords, options, labels, series);\r\n          cursor = new Cursor(chart, data.chartRect, coords, options);\r\n        });\r\n\r\n        $(chart.container).on('mouseleave', function () {\r\n          indexTracker.reset();\r\n          tooltip.hide();\r\n          cursor.hide();\r\n        });\r\n\r\n        $(chart.container).on('mousemove', '.' + chart.options.classNames.chart, function (event) {\r\n\r\n          if (event.target.tagName.toLowerCase() !== 'svg') {\r\n            return;\r\n          }\r\n\r\n          var offsetX = event.offsetX || event.originalEvent.layerX;\r\n\r\n          if (!indexTracker.set(offsetX)) {\r\n            return;\r\n          }\r\n\r\n          var index = indexTracker.get();\r\n          cursor.show(index);\r\n          tooltip.show(index);\r\n        });\r\n      };\r\n    };\r\n\r\n  } (window, document, Chartist));\r\n\n  return Chartist.plugins.lineTooltip;\n\n}));\n"]}